C51 COMPILER V9.55   LCD1602                                                               08/03/2021 21:57:48 PAGE 1   


C51 COMPILER V9.55, COMPILATION OF MODULE LCD1602
OBJECT MODULE PLACED IN .\Objects\LCD1602.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE LCD1602.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\L
                    -CD1602.lst) TABS(2) OBJECT(.\Objects\LCD1602.obj)

line level    source

   1          #include <REGX52.H>
   2          
   3          //引脚配置：
   4          sbit LCD_RS=P2^6;
   5          sbit LCD_RW=P2^5;
   6          sbit LCD_EN=P2^7;
   7          #define LCD_DataPort P0
   8          
   9          //函数定义：
  10          /**
  11            * @brief  LCD1602延时函数，12MHz调用可延时1ms
  12            * @param  无
  13            * @retval 无
  14            */
  15          void LCD_Delay()    //@11.0592MHz 1ms
  16          {
  17   1        unsigned char i, j;
  18   1        i = 2;
  19   1        j = 199;
  20   1        do
  21   1        {
  22   2          while (--j);
  23   2        } while (--i);
  24   1      }
  25          /**
  26            * @brief  LCD1602写命令
  27            * @param  Command 要写入的命令
  28            * @retval 无
  29            */
  30          void LCD_WriteCommand(unsigned char Command)
  31          {
  32   1        LCD_RS=0;
  33   1        LCD_RW=0;
  34   1        LCD_DataPort=Command;
  35   1        LCD_EN=1;
  36   1        LCD_Delay();
  37   1        LCD_EN=0;
  38   1        LCD_Delay();
  39   1      }
  40          
  41          /**
  42            * @brief  LCD1602写数据
  43            * @param  Data 要写入的数据
  44            * @retval 无
  45            */
  46          void LCD_WriteData(unsigned char Data)
  47          {
  48   1        LCD_RS=1;
  49   1        LCD_RW=0;
  50   1        LCD_DataPort=Data;
  51   1        LCD_EN=1;
  52   1        LCD_Delay();
  53   1        LCD_EN=0;
  54   1        LCD_Delay();
C51 COMPILER V9.55   LCD1602                                                               08/03/2021 21:57:48 PAGE 2   

  55   1      }
  56          
  57          /**
  58            * @brief  LCD1602设置光标位置
  59            * @param  Line 行位置，范围：1~2
  60            * @param  Column 列位置，范围：1~16
  61            * @retval 无
  62            */
  63          void LCD_SetCursor(unsigned char Line,unsigned char Column)
  64          {
  65   1        if(Line==1)
  66   1        {
  67   2          LCD_WriteCommand(0x80|(Column-1));
  68   2        }
  69   1        else if(Line==2)
  70   1        {
  71   2          LCD_WriteCommand(0x80|(Column-1+0x40));
  72   2        }
  73   1      }
  74          
  75          /**
  76            * @brief  LCD1602初始化函数
  77            * @param  无
  78            * @retval 无
  79            */
  80          void LCD_Init()
  81          {
  82   1        LCD_WriteCommand(0x38);//八位数据接口，两行显示，5*7点阵
  83   1        LCD_WriteCommand(0x0c);//显示开，光标关，闪烁关
  84   1        LCD_WriteCommand(0x06);//数据读写操作后，光标自动加一，画面不动
  85   1        LCD_WriteCommand(0x01);//光标复位，清屏
  86   1      }
  87          
  88          /**
  89            * @brief  在LCD1602指定位置上显示一个字符
  90            * @param  Line 行位置，范围：1~2
  91            * @param  Column 列位置，范围：1~16
  92            * @param  Char 要显示的字符
  93            * @retval 无
  94            */
  95          void LCD_ShowChar(unsigned char Line,unsigned char Column,char Char)
  96          {
  97   1        LCD_SetCursor(Line,Column);
  98   1        LCD_WriteData(Char);
  99   1      }
 100          
 101          /**
 102            * @brief  在LCD1602指定位置开始显示所给字符串
 103            * @param  Line 起始行位置，范围：1~2
 104            * @param  Column 起始列位置，范围：1~16
 105            * @param  String 要显示的字符串
 106            * @retval 无
 107            */
 108          void LCD_ShowString(unsigned char Line,unsigned char Column,char *String)
 109          {
 110   1        unsigned char i;
 111   1        LCD_SetCursor(Line,Column);
 112   1        for(i=0;String[i]!='\0';i++)
 113   1        {
 114   2          LCD_WriteData(String[i]);
 115   2        }
 116   1      }
C51 COMPILER V9.55   LCD1602                                                               08/03/2021 21:57:48 PAGE 3   

 117          
 118          /**
 119            * @brief  返回值=X的Y次方
 120            */
 121          int LCD_Pow(int X,int Y)
 122          {
 123   1        unsigned char i;
 124   1        int Result=1;
 125   1        for(i=0;i<Y;i++)
 126   1        {
 127   2          Result*=X;
 128   2        }
 129   1        return Result;
 130   1      }
 131          
 132          /**
 133            * @brief  在LCD1602指定位置开始显示所给数字
 134            * @param  Line 起始行位置，范围：1~2
 135            * @param  Column 起始列位置，范围：1~16
 136            * @param  Number 要显示的数字，范围：0~65535
 137            * @param  Length 要显示数字的长度，范围：1~5
 138            * @retval 无
 139            */
 140          void LCD_ShowNum(unsigned char Line,unsigned char Column,unsigned int Number,unsigned char Length)
 141          {
 142   1        unsigned char i;
 143   1        LCD_SetCursor(Line,Column);
 144   1        for(i=Length;i>0;i--)
 145   1        {
 146   2          LCD_WriteData(Number/LCD_Pow(10,i-1)%10+'0');
 147   2        }
 148   1      }
 149          
 150          /**
 151            * @brief  在LCD1602指定位置开始以有符号十进制显示所给数字
 152            * @param  Line 起始行位置，范围：1~2
 153            * @param  Column 起始列位置，范围：1~16
 154            * @param  Number 要显示的数字，范围：-32768~32767
 155            * @param  Length 要显示数字的长度，范围：1~5
 156            * @retval 无
 157            */
 158          void LCD_ShowSignedNum(unsigned char Line,unsigned char Column,int Number,unsigned char Length)
 159          {
 160   1        unsigned char i;
 161   1        unsigned int Number1;
 162   1        LCD_SetCursor(Line,Column);
 163   1        if(Number>=0)
 164   1        {
 165   2          LCD_WriteData('+');
 166   2          Number1=Number;
 167   2        }
 168   1        else
 169   1        {
 170   2          LCD_WriteData('-');
 171   2          Number1=-Number;
 172   2        }
 173   1        for(i=Length;i>0;i--)
 174   1        {
 175   2          LCD_WriteData(Number1/LCD_Pow(10,i-1)%10+'0');
 176   2        }
 177   1      }
 178          
C51 COMPILER V9.55   LCD1602                                                               08/03/2021 21:57:48 PAGE 4   

 179          /**
 180            * @brief  在LCD1602指定位置开始以十六进制显示所给数字
 181            * @param  Line 起始行位置，范围：1~2
 182            * @param  Column 起始列位置，范围：1~16
 183            * @param  Number 要显示的数字，范围：0~0xFFFF
 184            * @param  Length 要显示数字的长度，范围：1~4
 185            * @retval 无
 186            */
 187          void LCD_ShowHexNum(unsigned char Line,unsigned char Column,unsigned int Number,unsigned char Length)
 188          {
 189   1        unsigned char i,SingleNumber;
 190   1        LCD_SetCursor(Line,Column);
 191   1        for(i=Length;i>0;i--)
 192   1        {
 193   2          SingleNumber=Number/LCD_Pow(16,i-1)%16;
 194   2          if(SingleNumber<10)
 195   2          {
 196   3            LCD_WriteData(SingleNumber+'0');
 197   3          }
 198   2          else
 199   2          {
 200   3            LCD_WriteData(SingleNumber-10+'A');
 201   3          }
 202   2        }
 203   1      }
 204          
 205          /**
 206            * @brief  在LCD1602指定位置开始以二进制显示所给数字
 207            * @param  Line 起始行位置，范围：1~2
 208            * @param  Column 起始列位置，范围：1~16
 209            * @param  Number 要显示的数字，范围：0~1111 1111 1111 1111
 210            * @param  Length 要显示数字的长度，范围：1~16
 211            * @retval 无
 212            */
 213          void LCD_ShowBinNum(unsigned char Line,unsigned char Column,unsigned int Number,unsigned char Length)
 214          {
 215   1        unsigned char i;
 216   1        LCD_SetCursor(Line,Column);
 217   1        for(i=Length;i>0;i--)
 218   1        {
 219   2          LCD_WriteData(Number/LCD_Pow(2,i-1)%2+'0');
 220   2        }
 221   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    393    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      29
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
